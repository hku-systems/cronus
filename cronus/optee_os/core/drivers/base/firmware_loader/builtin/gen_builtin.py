
import glob
import os
search_dirs     =   [
	"nvidia/tu102/gr/", 
	"nvidia/tu102/nvdec/", 
	"nvidia/tu102/sec2/", 
	"nvidia/tu102/acr/"
]
search_wildcards    =   [d + "*.bin" for d in search_dirs]

CONFIG_64BIT=True
CONFIG_ARM=True
ASM_WORD  = ".quad" if CONFIG_64BIT else ".long"
ASM_ALIGN = 3 if CONFIG_64BIT else 2
PROGBITS  = "%progbits" if CONFIG_ARM else "@progbits"

header = \
	"/* Generated by {}/Makefile */\n"\
	".global __start_builtin_fw\n"  \
	".global __end_builtin_fw\n"  \
	"    .section .rodata\n"		\
	"    .p2align 4\n"

template_bin = \
	"_fw_{}_bin:\n"		\
	"    .incbin \"{}/{}\"\n"\
	"_fw_{}_end:\n"

template_str_header = \
	"    .section .rodata.str,\"aMS\",{},1\n"	\
	"    .p2align {}\n"	\

template_str = \
	"_fw_{}_name:\n"		\
	"    .string \"{}\"\n"

template_info_header = \
	"    .section .rodata\n"	\
	"    .p2align {}\n" \
    "__start_builtin_fw:\n"  

template_info = \
	"    {} _fw_{}_name\n"\
	"    {} _fw_{}_bin\n"	\
	"    {} _fw_{}_end - _fw_{}_bin\n" \
    
template_info_footer = \
    "__end_builtin_fw:\n"

print(header.format(""))

bin_files = []
for sw in search_wildcards:
    for dir in glob.glob(sw):
        bin_files.append(dir)

fwdir = os.getcwd()
for bin in bin_files:
    fwstr = bin.replace(".", "_").replace("/", "_")
    fwname = bin
    print(template_bin.format(fwstr, fwdir, fwname, fwstr))

print(template_str_header.format(PROGBITS, ASM_ALIGN))

for bin in bin_files:
    fwstr = bin.replace(".", "_").replace("/", "_")
    fwname = bin
    print(template_str.format(fwstr, fwname))

print(template_info_header.format(ASM_ALIGN))

for bin in bin_files:
    fwstr = bin.replace(".", "_").replace("/", "_")
    fwname = bin
    print(template_info.format(ASM_WORD, fwstr, ASM_WORD, fwstr, ASM_WORD, fwstr, fwstr))

print(template_info_footer)
